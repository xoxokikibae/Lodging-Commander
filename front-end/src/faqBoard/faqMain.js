import React, {useState, useEffect} from 'react';
import './faqMain.css';
import {Search, X} from 'lucide-react';
import axios from 'axios';

const defaultCategories = [
    {
        id: 1, title: "ÏàôÏÜå", icon: "üè®", documents: [
            {id: 1, title: "ÏàôÏÜå ÏòàÏïΩ Î≥ÄÍ≤Ω", content: "Ïó¨Ìñâ Í≥ÑÌöçÏùÑ Î≥ÄÍ≤ΩÌïòÍ≥† Ïã∂ÏúºÏã†Í∞ÄÏöî?"},
            {id: 2, title: "ÏàôÏÜå ÏòàÏïΩ Ï∑®ÏÜå", content: "Ïó¨Ìñâ Í≥ÑÌöçÏùÑ Ï∑®ÏÜåÌï¥Ïïº ÌïòÎÇòÏöî? ÌôòÎ∂à Í¥ÄÎ†®ÏùÄ FAQ Ï∑®ÏÜå Î∞è ÌôòÎ∂àÏóêÏÑú Îçî ÏûêÏÑ∏ÌïòÍ≤å ÏïàÎÇ¥Ìï¥ÎìúÎ¶ΩÎãàÎã§."},
            {id: 3, title: "ÏàôÏÜå Ï≤¥ÌÅ¨Ïù∏ Î∞è Ï≤¥ÌÅ¨ÏïÑÏõÉ", content: "ÏàôÏÜå Ï≤¥ÌÅ¨Ïù∏Í≥º Ï≤¥ÌÅ¨ÏïÑÏõÉÏóê ÎåÄÌïú Î™®Îì† Í≤É"}
        ]
    },
    {
        id: 2, title: "Í≤∞Ï†ú", icon: "üí≥", documents: [
            {id: 1, title: "Í≤∞Ï†ú ÏàòÎã® Î≥ÄÍ≤Ω", content: "Í≤∞Ï†ú ÏàòÎã® Î≥ÄÍ≤ΩÏùÄ 1:1 Î¨∏ÏùòÏóê ÎÇ®Í≤®Ï£ºÏÑ∏Ïöî"},
            {id: 2, title: "Í≤∞Ï†ú Í±∞Î∂Ä Î∞úÏÉù Ïãú Ìï¥Í≤∞Ï±Ö", content: "Í≤∞Ï†úÍ∞Ä Í±∞Î∂ÄÎêòÎ©¥ Îã§ÏùåÍ≥º Í∞ôÏùÄ Ïù¥Ïú† ÎïåÎ¨∏Ïùº Ïàò ÏûàÏäµÎãàÎã§."},
            {id: 3, title: "Í≤∞Ï†úÏóê ÎåÄÌïú ÏòÅÏàòÏ¶ù Î∞õÍ∏∞", content: "ÏòÅÏàòÏ¶ù ÏàòÎ†π Î∞©Î≤ïÏùÄ ÏòàÏïΩÌïú Î∞©Î≤ïÏóê Îî∞Îùº Îã¨ÎùºÏßëÎãàÎã§. 1. ÌòÑÏû• Í≤∞Ï†ú 2. Ïò®ÎùºÏù∏ÏóêÏÑú ÎØ∏Î¶¨ Í≤∞Ï†ú"},
        ]
    },
    {
        id: 3, title: "Ï∑®ÏÜå Î∞è ÌôòÎ∂à", icon: "üîô", documents: [
            {id: 1, title: "Ï∑®ÏÜå Î∞è ÌôòÎ∂à Ï†ïÏ±Ö Î∞è Ï†àÏ∞®", content: "Íµ¨Îß§ Í≤∞Ï†ïÌñàÎçò ÏàôÏÜåÎ•º Î≥ÄÍ≤ΩÌïòÍ±∞ÎÇò Ï∑®ÏÜåÌïòÍ≥† ÌôòÎ∂àÎ∞õÍ∏∏ ÏõêÌïòÏãúÎÇòÏöî?"},
            {id: 2, title: "ÌôòÎ∂à ÏãúÍ∏∞", content: "ÌôòÎ∂àÏùÄ Ïπ¥ÎìúÏÇ¨Ïóê Îî∞Îùº Îã¨ÎùºÏßà Ïàò ÏûàÏäµÎãàÎã§. Í≥ÑÏ¢å Ïù¥Ï≤¥ Î∞è Î¨¥ÌÜµÏû• ÏûÖÍ∏àÏùò Í≤ΩÏö∞ Ï£ºÎßê Î∞è Í≥µÌú¥Ïùº Ï†úÏô∏ 3Ïùº Ïù¥ÎÇ¥Î°ú ÌôòÎ∂àÏù¥ Îê©ÎãàÎã§."},
            {id: 3, title: "ÏàôÏÜå ÏòàÏïΩ Ï∑®ÏÜå Î∞è ÌôòÎ∂à ÌôòÍ∏âÍ∏à", content: "ÏàôÏÜå ÏòàÏïΩ 7Ïùº Ï†Ñ 100%, ÏàôÏÜå ÏòàÏïΩ 3Ïùº Ï†Ñ 50%, ÏàôÏÜå ÏòàÏïΩ 24ÏãúÍ∞Ñ Ïù¥ÎÇ¥ ÌôòÎ∂à Î∞è Ï∑®ÏÜå Î∂àÍ∞Ä "}
        ]
    },
    {
        id: 4, title: "ÌöåÏõê Ï†ïÎ≥¥", icon: "üë§", documents: [
            {id: 1, title: "ÌöåÏõê Ï†ïÎ≥¥ ÏàòÏ†ï", content: "ÌöåÏõê Ï†ïÎ≥¥ ÏàòÏ†ïÏùÄ 'Î°úÍ∑∏Ïù∏ ÌõÑ' Í∞úÏù∏Ï†ïÎ≥¥ÏàòÏ†ïÏóêÏÑú Ìï† Ïàò ÏûàÏäµÎãàÎã§."},
            {id: 2, title: "ÌöåÏõê ÌÉàÌá¥", content: "ÌöåÏõê ÌÉàÌá¥Îäî 'Î°úÍ∑∏Ïù∏ ÌõÑ' Í∞úÏù∏Ï†ïÎ≥¥ÏóêÏÑú ÌÉàÌá¥Í∞Ä Í∞ÄÎä•Ìï©ÎãàÎã§."},
            {id: 3, title: "ÌöåÏõê Í∞úÏù∏Ï†ïÎ≥¥ ÏÇ≠Ï†ú ÏöîÏ≤≠", content: "Í∞úÏù∏Ï†ïÎ≥¥ ÏÇ≠Ï†ú ÏöîÏ≤≠ÏùÄ 1:1 Î¨∏ÏùòÎ•º ÌÜµÌï¥ Ïó∞ÎùΩÏ£ºÏÑ∏Ïöî. "},
        ]
    },
];

const FaqMainHeading = {
    fontFamily: 'Josefin Sans, Nanum Gothic',
    fontStyle: 'Normal',
    fontWeight: '400',
    fontOpticalSizing: 'auto',
}

const SearchBarStyle = {
    fontFamily: 'Josefin Sans, Nanum Gothic',
    fontStyle: 'Normal',
    fontWeight: '400',
    fontOpticalSizing: 'auto',
}

function FaqMain() {
    const [searchTerm, setSearchTerm] = useState('');

    const [activePopup, setActivePopup] = useState(null);
    const [selectedDocument, setSelectedDocument] = useState(null);
    const [selectedCategory, setSelectedCategory] = useState(null);
    const [faqCategories, setFaqCategories] = useState(defaultCategories);
    const [isLoading, setIsLoading] = useState(true);

    useEffect(() => {
        setIsLoading(true);
        axios.get('http://localhost:8080/faqBoard/categories-with-documents')
            .then(response => {
                console.log('API response', response.data);
                const categories = Array.isArray(response.data) && response.data.length > 0 ? response.data : defaultCategories;
                console.log('Categories to be set:', categories);
                setFaqCategories(categories);
            })
            .catch(error => {
                console.error('Error fetching faq categories', error);
                console.log('Using default categories');
                setFaqCategories(defaultCategories);
            })
            .finally(() => {
                setIsLoading(false);
            })
        ;
    }, []);

    const handleSearch = (e) => {
        e.preventDefault();
        console.log("Searching for:", searchTerm);
    };

    const openDocument = (document => {
        setSelectedDocument(document);
        setActivePopup('document');
    })

    const closeDocument = () => {
        setActivePopup(null);
        setSelectedCategory(null);
        setSelectedDocument(null);
    }

    const openCategoryDetails = (category) => {
        setSelectedCategory(category);
    }

    return (
        <div className="faq-main-container">
            <h2 className="faq-main-heading" style={FaqMainHeading}> ÏûêÏ£º Î¨ªÎäî ÏßàÎ¨∏(FAQ)ÏÑºÌÑ∞Ïóê Ïò§Ïã† Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§</h2>

            <div>
                <form onSubmit={handleSearch} className="faq-search-form">
                    <input
                        type="text"
                        placeholder="ÏßàÎ¨∏ÏùÑ Í≤ÄÏÉâÌïòÏÑ∏Ïöî"
                        value={searchTerm}
                        onChange={(e) => setSearchTerm(e.target.value)}
                        className="faq-search-input"
                        style={SearchBarStyle}
                    />
                    <button type="submit" className="faq-search-button">
                        <Search size={20}/>
                    </button>
                </form>
            </div>

            <div className="faq-categories-grid">
                {isLoading ? (
                    <p>Loading categories...</p>
                ) : faqCategories.length > 0 ? (
                    faqCategories.map(category => (
                        <div key={category.id} className="faq-category-item">
                            <span className="faq-category-icon">{category.icon}</span>
                            <span className="faq-category-title">{category.title}</span>
                            <ul className="faq-category-list">
                                {category.documents.map(doc => (
                                    <li key={doc.id} onClick={() => openDocument(doc)}>{doc.title}</li>
                                ))}
                            </ul>
                            <button onClick={() => openCategoryDetails(category)} className="faq-category-more">
                                Îçî ÎßéÏùÄ Í¥ÄÎ†® ÏßàÎ¨∏ Î≥¥Í∏∞
                            </button>
                        </div>
                    ))
                ) : (
                    <p> No FAQ categories available</p>
                )}
            </div>

            {selectedDocument && (
                <div className="faq-popup-overlay">
                    <div className="faq-popup">
                        <button className="faq-popup-close" onClick={closeDocument}>
                            <X size={20}/>
                        </button>
                        <h2>{selectedDocument.title}</h2>
                        <p>{selectedDocument.content}</p>
                    </div>
                </div>
            )}

            {activePopup === 'category' && searchTerm && (
                <div className="faq-popup-overlay">
                    <div className="faq-popup">
                        <button className="faq-popup-close" onClick={closeDocument}>
                            <X size={20}/>
                        </button>
                        <h2>{selectedCategory.title}</h2>
                        <ul>
                            {selectedCategory.documents.map(doc => (
                                <li key={doc.id} onClick={() => openDocument(doc)}>{doc.title}</li>
                            ))}
                        </ul>
                    </div>
                </div>
            )}

            {activePopup === 'document' && selectedDocument && (
                <div className="faq-popup-overlay">
                    <div className="faq-popup">
                        <button className="faq-popup-close" onClick={closeDocument}>
                            <X size={20}/>
                        </button>
                        <h2>{selectedDocument.title}</h2>
                        <p>{selectedDocument.content}</p>
                    </div>
                </div>
            )}

            {selectedCategory && (
                <div className="faq-popup-overlay">
                    <div className="faq-popup">
                        <button className="faq-popup-close" onClick={() => setSelectedCategory(null)}>
                            <X size={20}/>
                        </button>
                        <h2>{selectedCategory.title}</h2>
                        <ul>
                            {selectedCategory.documents.map(doc => (
                                <li key={doc.id} onClick={() => openDocument(doc)}>
                                    {doc.title}
                                </li>
                            ))}
                        </ul>
                    </div>
                </div>
            )}

        </div>
    );
}

export default FaqMain;